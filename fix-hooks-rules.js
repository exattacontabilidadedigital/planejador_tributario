/**
 * REGRAS DOS HOOKS - PROBLEMA RESOLVIDO!
 * =====================================
 */

console.log('🔧 [HOOKS] Problema das Regras dos Hooks Corrigido!')
console.log('')
console.log('❌ PROBLEMA ANTERIOR:')
console.log('   - Early return (if (!mounted)) ANTES do useMemo')
console.log('   - Violava Rules of Hooks: hooks chamados condicionalmente')
console.log('   - Erro: "React has detected a change in the order of Hooks"')
console.log('')
console.log('✅ SOLUÇÃO APLICADA:')
console.log('   1. Moveu TODOS os hooks para ANTES do early return')
console.log('   2. useMemo agora sempre executa (com guards internos)')
console.log('   3. Early return só após todos os hooks serem chamados')
console.log('   4. Removida declaração duplicada de insights')
console.log('')
console.log('🔄 ORDEM CORRETA DOS HOOKS:')
console.log('   1. use(params)')
console.log('   2. useRouter()')
console.log('   3. useEmpresasStore()')
console.log('   4. useCenariosStore()')
console.log('   5. useState() x4 (mounted, empresa, cenarios, anoAtual)')
console.log('   6. useEffect() x2')
console.log('   7. useRelatorios()')
console.log('   8. useMemo() (insights)')
console.log('   9. if (!mounted) return... (DEPOIS de todos os hooks)')
console.log('')
console.log('🎯 REGRAS DOS HOOKS RESPEITADAS:')
console.log('   ✅ Hooks sempre na mesma ordem')
console.log('   ✅ Nunca dentro de loops, condições ou funções aninhadas')
console.log('   ✅ Sempre no nível superior do componente')
console.log('   ✅ Chamados antes de qualquer return early')
console.log('')
console.log('🌐 TESTE:')
console.log('   1. Acesse: http://localhost:3001')
console.log('   2. Vá para qualquer empresa')
console.log('   3. Console sem erros de hooks')
console.log('   4. Dashboard carrega normalmente')
console.log('')
console.log('✅ STATUS: REGRAS DOS HOOKS RESPEITADAS')

setTimeout(() => {
  console.log('\n🏁 Problema de Hooks resolvido - Sistema estável!')
}, 1000)